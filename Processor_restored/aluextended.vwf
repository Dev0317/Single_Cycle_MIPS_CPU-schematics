/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off processorDebug -c processorDebug --vector_source="/home/gorbu/Documents/Academics/Semester1/ENGF0001/ProcessorDebug/aluextended.vwf" --testbench_file="/home/gorbu/Documents/Academics/Semester1/ENGF0001/ProcessorDebug/simulation/qsim/aluextended.vwf.vt"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off processorDebug -c processorDebug --vector_source="/home/gorbu/Documents/Academics/Semester1/ENGF0001/ProcessorDebug/aluextended.vwf" --testbench_file="/home/gorbu/Documents/Academics/Semester1/ENGF0001/ProcessorDebug/simulation/qsim/aluextended.vwf.vt"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=verilog --output_directory="/home/gorbu/Documents/Academics/Semester1/ENGF0001/ProcessorDebug/simulation/qsim/" processorDebug -c processorDebug</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=verilog --output_directory="/home/gorbu/Documents/Academics/Semester1/ENGF0001/ProcessorDebug/simulation/qsim/" processorDebug -c processorDebug</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vlog -work work processorDebug.vo
vlog -work work aluextended.vwf.vt
vsim -novopt -c -t 1ps -L fiftyfivenm_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.aluextended_vlg_vec_tst
vcd file -direction processorDebug.msim.vcd
vcd add -internal aluextended_vlg_vec_tst/*
vcd add -internal aluextended_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f

</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vlog -work work processorDebug.vo
vlog -work work aluextended.vwf.vt
vsim -novopt -c -t 1ps -L fiftyfivenm_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.aluextended_vlg_vec_tst
vcd file -direction processorDebug.msim.vcd
vcd add -internal aluextended_vlg_vec_tst/*
vcd add -internal aluextended_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f

</modelsim_script_timing>
<hdl_lang>verilog</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 20000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 1000.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("A")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("A[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("ADDSUB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDSUB[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ADDSUB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ADDSUB";
}

SIGNAL("ALUControl")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ALUControl[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUControl";
}

SIGNAL("ALUControl[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUControl";
}

SIGNAL("ALUControl[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUControl";
}

SIGNAL("AND")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AND[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("AND[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AND";
}

SIGNAL("B")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("F")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("F[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "F";
}

SIGNAL("F[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "F";
}

SIGNAL("F[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "F";
}

SIGNAL("OR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OR[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("OR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OR";
}

SIGNAL("SLT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SLT[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("SLT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLT";
}

SIGNAL("U")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

TRANSITION_LIST("A[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("A[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("A[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("A[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 8000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("A[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 5000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("A[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 5000.0;
	}
}

TRANSITION_LIST("A[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("A[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 5000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("A[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 7000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("A[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("A[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("A[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("A[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("A[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 5000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("A[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("A[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("A[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("A[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("A[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 5000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("A[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
	}
}

TRANSITION_LIST("A[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("A[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("A[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("A[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("A[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 7000.0;
	}
}

TRANSITION_LIST("A[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 7000.0;
	}
}

TRANSITION_LIST("A[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("A[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 4000.0;
	}
}

TRANSITION_LIST("A[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("A[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("A[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("A[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("ADDSUB[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ADDSUB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ALUControl[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ALUControl[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("ALUControl[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("AND[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("B[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
	}
}

TRANSITION_LIST("B[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 7000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("B[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("B[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 5000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("B[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("B[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("B[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("B[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("B[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("B[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("B[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("B[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 7000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("B[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("B[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 5000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("B[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("B[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("B[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("B[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 5000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("B[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("B[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("B[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("B[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 8000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("B[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 5000.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("B[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("B[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
	}
}

TRANSITION_LIST("B[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("B[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("B[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("B[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("B[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("B[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("B[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
	}
}

TRANSITION_LIST("F[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("F[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("F[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("OR[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("OR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("SLT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("U")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

TRANSITION_LIST("Y[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "A[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ADDSUB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ALUControl";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
	CHILDREN = 67, 68, 69;
}

DISPLAY_LINE
{
	CHANNEL = "ALUControl[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "ALUControl[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "ALUControl[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "AND";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 0;
	CHILDREN = 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102;
}

DISPLAY_LINE
{
	CHANNEL = "AND[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "AND[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "B";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 103;
	TREE_LEVEL = 0;
	CHILDREN = 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135;
}

DISPLAY_LINE
{
	CHANNEL = "B[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "B[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "F";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 136;
	TREE_LEVEL = 0;
	CHILDREN = 137, 138, 139;
}

DISPLAY_LINE
{
	CHANNEL = "F[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 136;
}

DISPLAY_LINE
{
	CHANNEL = "F[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 136;
}

DISPLAY_LINE
{
	CHANNEL = "F[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 136;
}

DISPLAY_LINE
{
	CHANNEL = "OR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 140;
	TREE_LEVEL = 0;
	CHILDREN = 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172;
}

DISPLAY_LINE
{
	CHANNEL = "OR[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 165;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "OR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "SLT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 173;
	TREE_LEVEL = 0;
	CHILDREN = 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 175;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 178;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 180;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 182;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 183;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 184;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 185;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 195;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 196;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 198;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 200;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 201;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 202;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 203;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "SLT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "U";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 206;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 207;
	TREE_LEVEL = 0;
	CHILDREN = 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239;
}

DISPLAY_LINE
{
	CHANNEL = "Y[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 208;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 210;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 212;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 213;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 215;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 216;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 217;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 218;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 219;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 220;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 221;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 222;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 223;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 224;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 225;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 226;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 227;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 228;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 229;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 230;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 231;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 232;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 233;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 234;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 235;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 236;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 237;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 238;
	TREE_LEVEL = 1;
	PARENT = 207;
}

DISPLAY_LINE
{
	CHANNEL = "Y[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 239;
	TREE_LEVEL = 1;
	PARENT = 207;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
